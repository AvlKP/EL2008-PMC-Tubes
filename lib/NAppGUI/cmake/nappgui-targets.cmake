# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.27)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS nappgui::sewer nappgui::osbs nappgui::core nappgui::geom2d nappgui::draw2d nappgui::osgui nappgui::gui nappgui::osapp nappgui::inet nappgui::nrc nappgui::Bode nappgui::Bricks nappgui::casino nappgui::Col2dHello nappgui::ColorView nappgui::Dice nappgui::Die nappgui::DrawBig nappgui::DrawHello nappgui::DrawImg nappgui::Fractals nappgui::GuiHello nappgui::HelloWorld nappgui::HelloCpp nappgui::htjson nappgui::Products nappgui::stlcmp nappgui::UrlImg)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target nappgui::sewer
add_library(nappgui::sewer STATIC IMPORTED)

set_target_properties(nappgui::sewer PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "NAPPGUI_MAJOR=1;NAPPGUI_MINOR=4;NAPPGUI_PATCH=2;NAPPGUI_BUILD=5131"
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/sewer"
)

# Create imported target nappgui::osbs
add_library(nappgui::osbs STATIC IMPORTED)

set_target_properties(nappgui::osbs PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/osbs"
)

# Create imported target nappgui::core
add_library(nappgui::core STATIC IMPORTED)

set_target_properties(nappgui::core PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/core"
)

# Create imported target nappgui::geom2d
add_library(nappgui::geom2d STATIC IMPORTED)

set_target_properties(nappgui::geom2d PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/geom2d"
)

# Create imported target nappgui::draw2d
add_library(nappgui::draw2d STATIC IMPORTED)

set_target_properties(nappgui::draw2d PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/draw2d"
)

# Create imported target nappgui::osgui
add_library(nappgui::osgui STATIC IMPORTED)

set_target_properties(nappgui::osgui PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/osgui"
)

# Create imported target nappgui::gui
add_library(nappgui::gui STATIC IMPORTED)

set_target_properties(nappgui::gui PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/gui"
)

# Create imported target nappgui::osapp
add_library(nappgui::osapp STATIC IMPORTED)

set_target_properties(nappgui::osapp PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/osapp"
)

# Create imported target nappgui::inet
add_library(nappgui::inet STATIC IMPORTED)

set_target_properties(nappgui::inet PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/inet"
)

# Create imported target nappgui::nrc
add_executable(nappgui::nrc IMPORTED)

set_target_properties(nappgui::nrc PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/nrc"
)

# Create imported target nappgui::Bode
add_executable(nappgui::Bode IMPORTED)

set_target_properties(nappgui::Bode PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/bode"
)

# Create imported target nappgui::Bricks
add_executable(nappgui::Bricks IMPORTED)

set_target_properties(nappgui::Bricks PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/bricks"
)

# Create imported target nappgui::casino
add_library(nappgui::casino STATIC IMPORTED)

set_target_properties(nappgui::casino PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-fPIC"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/casino"
)

# Create imported target nappgui::Col2dHello
add_executable(nappgui::Col2dHello IMPORTED)

set_target_properties(nappgui::Col2dHello PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/col2dhello"
)

# Create imported target nappgui::ColorView
add_executable(nappgui::ColorView IMPORTED)

set_target_properties(nappgui::ColorView PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/colorview"
)

# Create imported target nappgui::Dice
add_executable(nappgui::Dice IMPORTED)

set_target_properties(nappgui::Dice PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/dice"
)

# Create imported target nappgui::Die
add_executable(nappgui::Die IMPORTED)

set_target_properties(nappgui::Die PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/die"
)

# Create imported target nappgui::DrawBig
add_executable(nappgui::DrawBig IMPORTED)

set_target_properties(nappgui::DrawBig PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/drawbig"
)

# Create imported target nappgui::DrawHello
add_executable(nappgui::DrawHello IMPORTED)

set_target_properties(nappgui::DrawHello PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/drawhello"
)

# Create imported target nappgui::DrawImg
add_executable(nappgui::DrawImg IMPORTED)

set_target_properties(nappgui::DrawImg PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/drawimg"
)

# Create imported target nappgui::Fractals
add_executable(nappgui::Fractals IMPORTED)

set_target_properties(nappgui::Fractals PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/fractals"
)

# Create imported target nappgui::GuiHello
add_executable(nappgui::GuiHello IMPORTED)

set_target_properties(nappgui::GuiHello PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/guihello"
)

# Create imported target nappgui::HelloWorld
add_executable(nappgui::HelloWorld IMPORTED)

set_target_properties(nappgui::HelloWorld PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/hello"
)

# Create imported target nappgui::HelloCpp
add_executable(nappgui::HelloCpp IMPORTED)

set_target_properties(nappgui::HelloCpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/hellocpp"
)

# Create imported target nappgui::htjson
add_executable(nappgui::htjson IMPORTED)

set_target_properties(nappgui::htjson PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/htjson"
)

# Create imported target nappgui::Products
add_executable(nappgui::Products IMPORTED)

set_target_properties(nappgui::Products PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/products"
)

# Create imported target nappgui::stlcmp
add_executable(nappgui::stlcmp IMPORTED)

set_target_properties(nappgui::stlcmp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/stlcmp"
)

# Create imported target nappgui::UrlImg
add_executable(nappgui::UrlImg IMPORTED)

set_target_properties(nappgui::UrlImg PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/inc;${_IMPORT_PREFIX}/inc/urlimg"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/nappgui-targets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
